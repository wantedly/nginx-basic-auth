user root;
worker_processes 4;
daemon off;
#worker_rlimit_nofile
error_log /dev/stderr info;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    #multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    #access_log off;
    access_log /dev/stdout;
    server_tokens off;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout 65;

    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_proxied any;
    gzip_vary off;
    #gzip_buffers
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/rss+xml application/atom+xml text/javascript application/javascript application/json text/mathml;
    gzip_min_length  1000;
    gzip_disable     MSIE [1-6]\.;

    server_names_hash_bucket_size 64;
    types_hash_max_size 2048;
    types_hash_bucket_size 64;
    #proxy_read_timeout
    #client_body_buffer_size
    #client_max_body_size

    limit_req_zone $binary_remote_addr zone=default:10m rate=1r/s;

    server {
        listen 8080;
        server_name {{ var "SERVER_NAME" }};
        client_max_body_size 50M;

        location / {

            # Deny Nodes Shutdown API
            if ($request_filename ~ "_shutdown") {
              return 403;
              break;
            }


            # Pass requests to Backend
            proxy_pass {{ var "BACKEND_URL" }};
            proxy_redirect off;

            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header  Host $http_host;

            # For CORS Ajax
            proxy_pass_header Access-Control-Allow-Origin;
            proxy_pass_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            add_header Access-Control-Allow-Headers 'X-Requested-With, Content-Type';
            add_header Access-Control-Allow-Credentials true;

            # Authorize access
            auth_basic           "Authentication";
            auth_basic_user_file /etc/nginx/basic_auth_users;
        }

        location /status {
            proxy_method HEAD;
            proxy_intercept_errors on;
            proxy_pass {{ var "BACKEND_URL" }};
        }
    }

    server {
        listen 8090;

        location /status {
            stub_status on;
            access_log off;
        }
    }
}
